from flask import Flask
import pytz
from datetime import datetime, timezone
import os

app = Flask(__name__)

# Set the timezone to PST
timezone = pytz.timezone('America/Los_Angeles')

# Initialize the last_date variable to None
last_date = None

@app.route('/')
def display_date():
    global last_date
    
    # Get the current date and time in the PST timezone
    current_date = datetime.now(timezone).strftime("%Y-%m-%d")

    # Check if the current date is the same as the last_date variable
    if last_date != current_date:
        # If it's a new day, update the last_date variable and display the new date
        last_date = current_date
        return f"The current date in PST is: {current_date}"
    else:
        # If it's the same day, just display the previously saved date
        return f"The last saved date in PST is: {last_date}"

if __name__ == '__main__':
    # Set the port to 5000
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)

	
	

	
	# Dockerfile
FROM python:3.9-slim

WORKDIR /app

COPY app.py .

RUN pip install flask

CMD ["python", "app.py"]


docker build -t date-app .
docker run -d -p 5000:5000 date-app



apiVersion: apps/v1
kind: Deployment
metadata:
  name: date-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: date-app
  template:
    metadata:
      labels:
        app: date-app
    spec:
      containers:
      - name: date-app
        image: date-app
        ports:
        - containerPort: 5000

kubectl apply -f deployment.yaml

kubectl logs -f <pod-name>
